schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type AWSResource @aws_api_key @aws_cognito_user_pools @aws_iam {
  accepterOwnerId: String
  accepterRegion: String
  accepterVpcId: String
  accountId: String!
  accountName: String
  allIngressPortsExposed: Boolean
  allocatedStorage: Float
  allocationId: String
  amazonAddress: String
  amazonSideAsn: Int
  amiName: String
  asn: Int
  assignIpv6AddressOnCreation: Boolean
  associatedSubnets: [String]
  association: AWSJSON
  associationCount: Int
  associationId: String
  attachedInstances: [String]
  attachedResourceId: String
  attachedResourceType: String
  attachedVpcs: [String]
  attachmentCount: Int
  attachmentName: String
  attachmentResourceId: String
  attachmentResourceType: String
  attachmentState: String
  authKey: String
  autoScalingGroupArn: String
  autoScalingGroupName: String
  autoScalingGroupNameTag: String
  autoShutdown: String
  autoStart: String
  availabilityZone: String
  availabilityZoneId: String
  availabilityZones: [String]
  availableIpAddressCount: Int
  awsDevice: String
  awsDeviceV2: String
  bandwidth: String
  bgpPeers: AWSJSON
  bucketName: String
  bucketNameTag: String
  canonicalHostedZoneId: String
  canonicalHostedZoneName: String
  canonicalHostedZoneNameId: String
  carrierIp: String
  category: String
  cidrBlock: String
  clusterId: String
  collectionDuration: Float
  connectionId: String
  connectionName: String
  connectionState: String
  connectivityType: String
  createdAt: AWSDateTime
  creationDate: AWSDateTime
  currentSize: Int
  customDenyRuleCount: Int
  customerAddress: String
  customerGatewayId: String
  customerOwnedIp: String
  customerOwnedIpv4Pool: String
  customerRouterConfig: String
  cwAgentDiskDetected: Boolean
  cwAgentMemoryDetected: Boolean
  dbInstanceArn: String
  dbInstanceId: String
  dbInstanceName: String
  defaultForAz: Boolean
  defaultRouteTableAssociation: String
  defaultRouteTablePropagation: String
  description: String
  desiredCapacity: Int
  directConnectGatewayId: String
  diskUtilization: String
  dnsName: String
  dnsSupport: String
  domain: String
  ebsStatus: String
  egressRuleCount: Int
  eipName: String
  enableDnsHostnames: Boolean
  enableDnsSupport: Boolean
  encrypted: Boolean
  encryptionMode: String
  endpointState: String
  engine: String
  engineVersion: String
  exposedEgressPorts: [String]
  exposedIngressPorts: [String]
  flowLogsEnabled: Boolean
  groupId: String
  groupName: String
  groupNameTag: String
  hasExposedEgressPorts: Boolean
  hasExposedIngressPorts: Boolean
  hasInternetRoute: Boolean
  hasLifecycleRules: Boolean
  hasLogicalRedundancy: String
  hasNatRoute: Boolean
  hasVpcPeeringRoute: Boolean
  healthCheck: AWSJSON
  healthCheckGracePeriod: Int
  healthCheckType: String
  healthChecksPassed: Int
  healthChecksTotal: Int
  healthStatus: String
  healthyInstances: Int
  iamRole: String
  id: String!
  imageId: String
  imageName: String
  imageState: String
  ingressRuleCount: Int
  instanceClass: String
  instanceCount: Int
  instanceId: String
  instanceIds: [String]
  instanceName: String
  instancePrivateIps: AWSJSON
  instancePublicIps: AWSJSON
  instanceState: String
  instanceStatus: String
  instanceTenancy: String
  instanceType: String
  instances: [String]
  internetGatewayId: String
  internetGatewayName: String
  ipAddressType: String
  isDefault: Boolean
  isMain: Boolean
  isMetric: Boolean
  isWindows: Boolean
  jumboFrameCapable: Boolean
  lagId: String
  lastUpdated: AWSDateTime
  launchConfigurationName: String
  launchTemplate: AWSJSON
  launchTime: AWSDateTime
  lbState: String
  loaIssueTime: AWSDateTime
  loadBalancerArn: String
  loadBalancerName: String
  loadBalancerNameTag: String
  loadBalancerNames: [String]
  location: String
  macSecCapable: Boolean
  mapPublicIpOnLaunch: Boolean
  maxSize: Int
  metricData: AWSJSON
  metricDate: String
  metricType: String
  minSize: Int
  mtu: Int
  multiAz: Boolean
  multicastSupport: String
  naclEgressRuleCount: Int
  naclIngressRuleCount: Int
  natGatewayId: String
  natGatewayName: String
  natGatewayState: String
  natPublicIps: [String]
  networkAclId: String
  networkAclName: String
  networkBorderGroup: String
  networkInterfaceId: String
  networkInterfaceOwnerId: String
  objectCount: Int
  ownerId: String
  partnerName: String
  patchGroup: String
  peeringConnectionName: String
  peeringStatus: String
  performanceInsightsEnabled: Boolean
  platform: String
  platformDetails: String
  policyDocument: String
  portEncryptionStatus: String
  privateDnsEnabled: Boolean
  privateIpAddress: String
  publicIp: String
  ramUtilization: String
  region: String!
  requesterOwnerId: String
  requesterRegion: String
  requesterVpcId: String
  resourceOwnerId: String
  resourceType: String!
  resourceTypeRegionId: String
  resourcesProcessed: Int
  riskyIngressRules: [String]
  routeCount: Int
  routeFilterPrefixes: [String]
  routeTableId: String
  routeTableIds: [String]
  routeTableName: String
  saturday: String
  scheme: String
  securityGroupIds: [String]
  securityGroups: [String]
  serviceLinkedRoleArn: String
  serviceName: String
  size: Float
  snapshotArn: String
  snapshotCreateTime: String
  snapshotId: String
  snapshotName: String
  snapshotState: String
  snapshotType: String
  ssmLastPingTime: AWSDateTime
  ssmPingStatus: String
  ssmStatus: String
  ssmVersion: String
  startStop: String
  startTime: String
  state: String
  status: String
  statusMessage: String
  storageBytes: String
  storageClass: String
  storageType: String
  subnetId: String
  subnetIds: [String]
  subnetName: String
  subnetState: String
  subnets: [String]
  sunday: String
  swoBackup: String
  swoMonitor: String
  swoPatch: String
  swoRiskClass: String
  systemStatus: String
  tags: AWSJSON
  targetGroupArns: [String]
  targetGroups: [String]
  tgwState: String
  transitGatewayAttachmentId: String
  transitGatewayId: String
  transitGatewayName: String
  transitGatewayOwnerId: String
  tunnelCount: Int
  tunnelsUp: Int
  type: String
  updatedAt: AWSDateTime
  virtualGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceName: String
  virtualInterfaceState: String
  virtualInterfaceType: String
  vlan: Int
  volumeId: String
  volumeName: String
  volumeSize: Float
  volumeState: String
  volumeType: String
  vpcEndpointId: String
  vpcEndpointName: String
  vpcEndpointType: String
  vpcId: String
  vpcName: String
  vpcPeeringConnectionId: String
  vpcState: String
  vpcZoneIdentifier: String
  vpnConnectionId: String
  vpnConnectionName: String
  vpnEcmpSupport: String
  vpnGatewayId: String
  vpnState: String
}

type ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam {
  items: [AWSResource]!
  nextToken: String
}

type Mutation {
  createAWSResource(condition: ModelAWSResourceConditionInput, input: CreateAWSResourceInput!): AWSResource @aws_api_key @aws_cognito_user_pools @aws_iam
  deleteAWSResource(condition: ModelAWSResourceConditionInput, input: DeleteAWSResourceInput!): AWSResource @aws_cognito_user_pools @aws_iam
  updateAWSResource(condition: ModelAWSResourceConditionInput, input: UpdateAWSResourceInput!): AWSResource @aws_api_key @aws_cognito_user_pools @aws_iam
}

type Query {
  getAWSResource(id: String!): AWSResource @aws_cognito_user_pools @aws_iam
  listAWSResources(filter: ModelAWSResourceFilterInput, id: String, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam
  listByAccountId(accountId: String!, filter: ModelAWSResourceFilterInput, limit: Int, nextToken: String, resourceTypeLastUpdated: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyConditionInput, sortDirection: ModelSortDirection): ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam
  listByRegion(filter: ModelAWSResourceFilterInput, limit: Int, nextToken: String, region: String!, resourceTypeLastUpdated: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyConditionInput, sortDirection: ModelSortDirection): ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam
  listByResourceType(filter: ModelAWSResourceFilterInput, lastUpdated: ModelStringKeyConditionInput, limit: Int, nextToken: String, resourceType: String!, sortDirection: ModelSortDirection): ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam
  listByResourceTypeRegion(filter: ModelAWSResourceFilterInput, lastUpdated: ModelStringKeyConditionInput, limit: Int, nextToken: String, resourceTypeRegionId: String!, sortDirection: ModelSortDirection): ModelAWSResourceConnection @aws_cognito_user_pools @aws_iam
}

type Subscription {
  onCreateAWSResource(filter: ModelSubscriptionAWSResourceFilterInput): AWSResource @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["createAWSResource"])
  onDeleteAWSResource(filter: ModelSubscriptionAWSResourceFilterInput): AWSResource @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["deleteAWSResource"])
  onUpdateAWSResource(filter: ModelSubscriptionAWSResourceFilterInput): AWSResource @aws_cognito_user_pools @aws_iam @aws_subscribe(mutations : ["updateAWSResource"])
}

enum ModelAttributeTypes {
  _null
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
}

enum ModelSortDirection {
  ASC
  DESC
}

input CreateAWSResourceInput {
  accepterOwnerId: String
  accepterRegion: String
  accepterVpcId: String
  accountId: String!
  accountName: String
  allIngressPortsExposed: Boolean
  allocatedStorage: Float
  allocationId: String
  amazonAddress: String
  amazonSideAsn: Int
  amiName: String
  asn: Int
  assignIpv6AddressOnCreation: Boolean
  associatedSubnets: [String]
  association: AWSJSON
  associationCount: Int
  associationId: String
  attachedInstances: [String]
  attachedResourceId: String
  attachedResourceType: String
  attachedVpcs: [String]
  attachmentCount: Int
  attachmentName: String
  attachmentResourceId: String
  attachmentResourceType: String
  attachmentState: String
  authKey: String
  autoScalingGroupArn: String
  autoScalingGroupName: String
  autoScalingGroupNameTag: String
  autoShutdown: String
  autoStart: String
  availabilityZone: String
  availabilityZoneId: String
  availabilityZones: [String]
  availableIpAddressCount: Int
  awsDevice: String
  awsDeviceV2: String
  bandwidth: String
  bgpPeers: AWSJSON
  bucketName: String
  bucketNameTag: String
  canonicalHostedZoneId: String
  canonicalHostedZoneName: String
  canonicalHostedZoneNameId: String
  carrierIp: String
  category: String
  cidrBlock: String
  clusterId: String
  collectionDuration: Float
  connectionId: String
  connectionName: String
  connectionState: String
  connectivityType: String
  createdAt: AWSDateTime
  creationDate: AWSDateTime
  currentSize: Int
  customDenyRuleCount: Int
  customerAddress: String
  customerGatewayId: String
  customerOwnedIp: String
  customerOwnedIpv4Pool: String
  customerRouterConfig: String
  cwAgentDiskDetected: Boolean
  cwAgentMemoryDetected: Boolean
  dbInstanceArn: String
  dbInstanceId: String
  dbInstanceName: String
  defaultForAz: Boolean
  defaultRouteTableAssociation: String
  defaultRouteTablePropagation: String
  description: String
  desiredCapacity: Int
  directConnectGatewayId: String
  diskUtilization: String
  dnsName: String
  dnsSupport: String
  domain: String
  ebsStatus: String
  egressRuleCount: Int
  eipName: String
  enableDnsHostnames: Boolean
  enableDnsSupport: Boolean
  encrypted: Boolean
  encryptionMode: String
  endpointState: String
  engine: String
  engineVersion: String
  exposedEgressPorts: [String]
  exposedIngressPorts: [String]
  flowLogsEnabled: Boolean
  groupId: String
  groupName: String
  groupNameTag: String
  hasExposedEgressPorts: Boolean
  hasExposedIngressPorts: Boolean
  hasInternetRoute: Boolean
  hasLifecycleRules: Boolean
  hasLogicalRedundancy: String
  hasNatRoute: Boolean
  hasVpcPeeringRoute: Boolean
  healthCheck: AWSJSON
  healthCheckGracePeriod: Int
  healthCheckType: String
  healthChecksPassed: Int
  healthChecksTotal: Int
  healthStatus: String
  healthyInstances: Int
  iamRole: String
  id: String
  imageId: String
  imageName: String
  imageState: String
  ingressRuleCount: Int
  instanceClass: String
  instanceCount: Int
  instanceId: String
  instanceIds: [String]
  instanceName: String
  instancePrivateIps: AWSJSON
  instancePublicIps: AWSJSON
  instanceState: String
  instanceStatus: String
  instanceTenancy: String
  instanceType: String
  instances: [String]
  internetGatewayId: String
  internetGatewayName: String
  ipAddressType: String
  isDefault: Boolean
  isMain: Boolean
  isMetric: Boolean
  isWindows: Boolean
  jumboFrameCapable: Boolean
  lagId: String
  lastUpdated: AWSDateTime
  launchConfigurationName: String
  launchTemplate: AWSJSON
  launchTime: AWSDateTime
  lbState: String
  loaIssueTime: AWSDateTime
  loadBalancerArn: String
  loadBalancerName: String
  loadBalancerNameTag: String
  loadBalancerNames: [String]
  location: String
  macSecCapable: Boolean
  mapPublicIpOnLaunch: Boolean
  maxSize: Int
  metricData: AWSJSON
  metricDate: String
  metricType: String
  minSize: Int
  mtu: Int
  multiAz: Boolean
  multicastSupport: String
  naclEgressRuleCount: Int
  naclIngressRuleCount: Int
  natGatewayId: String
  natGatewayName: String
  natGatewayState: String
  natPublicIps: [String]
  networkAclId: String
  networkAclName: String
  networkBorderGroup: String
  networkInterfaceId: String
  networkInterfaceOwnerId: String
  objectCount: Int
  ownerId: String
  partnerName: String
  patchGroup: String
  peeringConnectionName: String
  peeringStatus: String
  performanceInsightsEnabled: Boolean
  platform: String
  platformDetails: String
  policyDocument: String
  portEncryptionStatus: String
  privateDnsEnabled: Boolean
  privateIpAddress: String
  publicIp: String
  ramUtilization: String
  region: String!
  requesterOwnerId: String
  requesterRegion: String
  requesterVpcId: String
  resourceOwnerId: String
  resourceType: String!
  resourceTypeRegionId: String
  resourcesProcessed: Int
  riskyIngressRules: [String]
  routeCount: Int
  routeFilterPrefixes: [String]
  routeTableId: String
  routeTableIds: [String]
  routeTableName: String
  saturday: String
  scheme: String
  securityGroupIds: [String]
  securityGroups: [String]
  serviceLinkedRoleArn: String
  serviceName: String
  size: Float
  snapshotArn: String
  snapshotCreateTime: String
  snapshotId: String
  snapshotName: String
  snapshotState: String
  snapshotType: String
  ssmLastPingTime: AWSDateTime
  ssmPingStatus: String
  ssmStatus: String
  ssmVersion: String
  startStop: String
  startTime: String
  state: String
  status: String
  statusMessage: String
  storageBytes: String
  storageClass: String
  storageType: String
  subnetId: String
  subnetIds: [String]
  subnetName: String
  subnetState: String
  subnets: [String]
  sunday: String
  swoBackup: String
  swoMonitor: String
  swoPatch: String
  swoRiskClass: String
  systemStatus: String
  tags: AWSJSON
  targetGroupArns: [String]
  targetGroups: [String]
  tgwState: String
  transitGatewayAttachmentId: String
  transitGatewayId: String
  transitGatewayName: String
  transitGatewayOwnerId: String
  tunnelCount: Int
  tunnelsUp: Int
  type: String
  updatedAt: AWSDateTime
  virtualGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceName: String
  virtualInterfaceState: String
  virtualInterfaceType: String
  vlan: Int
  volumeId: String
  volumeName: String
  volumeSize: Float
  volumeState: String
  volumeType: String
  vpcEndpointId: String
  vpcEndpointName: String
  vpcEndpointType: String
  vpcId: String
  vpcName: String
  vpcPeeringConnectionId: String
  vpcState: String
  vpcZoneIdentifier: String
  vpnConnectionId: String
  vpnConnectionName: String
  vpnEcmpSupport: String
  vpnGatewayId: String
  vpnState: String
}

input DeleteAWSResourceInput {
  id: String!
}

input ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyConditionInput {
  beginsWith: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
  between: [ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput]
  eq: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
  ge: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
  gt: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
  le: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
  lt: ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput
}

input ModelAWSResourceAWSResourcesByAccountIdAndResourceTypeAndLastUpdatedCompositeKeyInput {
  lastUpdated: String
  resourceType: String
}

input ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyConditionInput {
  beginsWith: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
  between: [ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput]
  eq: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
  ge: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
  gt: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
  le: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
  lt: ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput
}

input ModelAWSResourceAWSResourcesByRegionAndResourceTypeAndLastUpdatedCompositeKeyInput {
  lastUpdated: String
  resourceType: String
}

input ModelAWSResourceConditionInput {
  accepterOwnerId: ModelStringInput
  accepterRegion: ModelStringInput
  accepterVpcId: ModelStringInput
  accountId: ModelStringInput
  accountName: ModelStringInput
  allIngressPortsExposed: ModelBooleanInput
  allocatedStorage: ModelFloatInput
  allocationId: ModelStringInput
  amazonAddress: ModelStringInput
  amazonSideAsn: ModelIntInput
  amiName: ModelStringInput
  and: [ModelAWSResourceConditionInput]
  asn: ModelIntInput
  assignIpv6AddressOnCreation: ModelBooleanInput
  associatedSubnets: ModelStringInput
  association: ModelStringInput
  associationCount: ModelIntInput
  associationId: ModelStringInput
  attachedInstances: ModelStringInput
  attachedResourceId: ModelStringInput
  attachedResourceType: ModelStringInput
  attachedVpcs: ModelStringInput
  attachmentCount: ModelIntInput
  attachmentName: ModelStringInput
  attachmentResourceId: ModelStringInput
  attachmentResourceType: ModelStringInput
  attachmentState: ModelStringInput
  authKey: ModelStringInput
  autoScalingGroupArn: ModelStringInput
  autoScalingGroupName: ModelStringInput
  autoScalingGroupNameTag: ModelStringInput
  autoShutdown: ModelStringInput
  autoStart: ModelStringInput
  availabilityZone: ModelStringInput
  availabilityZoneId: ModelStringInput
  availabilityZones: ModelStringInput
  availableIpAddressCount: ModelIntInput
  awsDevice: ModelStringInput
  awsDeviceV2: ModelStringInput
  bandwidth: ModelStringInput
  bgpPeers: ModelStringInput
  bucketName: ModelStringInput
  bucketNameTag: ModelStringInput
  canonicalHostedZoneId: ModelStringInput
  canonicalHostedZoneName: ModelStringInput
  canonicalHostedZoneNameId: ModelStringInput
  carrierIp: ModelStringInput
  category: ModelStringInput
  cidrBlock: ModelStringInput
  clusterId: ModelStringInput
  collectionDuration: ModelFloatInput
  connectionId: ModelStringInput
  connectionName: ModelStringInput
  connectionState: ModelStringInput
  connectivityType: ModelStringInput
  createdAt: ModelStringInput
  creationDate: ModelStringInput
  currentSize: ModelIntInput
  customDenyRuleCount: ModelIntInput
  customerAddress: ModelStringInput
  customerGatewayId: ModelStringInput
  customerOwnedIp: ModelStringInput
  customerOwnedIpv4Pool: ModelStringInput
  customerRouterConfig: ModelStringInput
  cwAgentDiskDetected: ModelBooleanInput
  cwAgentMemoryDetected: ModelBooleanInput
  dbInstanceArn: ModelStringInput
  dbInstanceId: ModelStringInput
  dbInstanceName: ModelStringInput
  defaultForAz: ModelBooleanInput
  defaultRouteTableAssociation: ModelStringInput
  defaultRouteTablePropagation: ModelStringInput
  description: ModelStringInput
  desiredCapacity: ModelIntInput
  directConnectGatewayId: ModelStringInput
  diskUtilization: ModelStringInput
  dnsName: ModelStringInput
  dnsSupport: ModelStringInput
  domain: ModelStringInput
  ebsStatus: ModelStringInput
  egressRuleCount: ModelIntInput
  eipName: ModelStringInput
  enableDnsHostnames: ModelBooleanInput
  enableDnsSupport: ModelBooleanInput
  encrypted: ModelBooleanInput
  encryptionMode: ModelStringInput
  endpointState: ModelStringInput
  engine: ModelStringInput
  engineVersion: ModelStringInput
  exposedEgressPorts: ModelStringInput
  exposedIngressPorts: ModelStringInput
  flowLogsEnabled: ModelBooleanInput
  groupId: ModelStringInput
  groupName: ModelStringInput
  groupNameTag: ModelStringInput
  hasExposedEgressPorts: ModelBooleanInput
  hasExposedIngressPorts: ModelBooleanInput
  hasInternetRoute: ModelBooleanInput
  hasLifecycleRules: ModelBooleanInput
  hasLogicalRedundancy: ModelStringInput
  hasNatRoute: ModelBooleanInput
  hasVpcPeeringRoute: ModelBooleanInput
  healthCheck: ModelStringInput
  healthCheckGracePeriod: ModelIntInput
  healthCheckType: ModelStringInput
  healthChecksPassed: ModelIntInput
  healthChecksTotal: ModelIntInput
  healthStatus: ModelStringInput
  healthyInstances: ModelIntInput
  iamRole: ModelStringInput
  imageId: ModelStringInput
  imageName: ModelStringInput
  imageState: ModelStringInput
  ingressRuleCount: ModelIntInput
  instanceClass: ModelStringInput
  instanceCount: ModelIntInput
  instanceId: ModelStringInput
  instanceIds: ModelStringInput
  instanceName: ModelStringInput
  instancePrivateIps: ModelStringInput
  instancePublicIps: ModelStringInput
  instanceState: ModelStringInput
  instanceStatus: ModelStringInput
  instanceTenancy: ModelStringInput
  instanceType: ModelStringInput
  instances: ModelStringInput
  internetGatewayId: ModelStringInput
  internetGatewayName: ModelStringInput
  ipAddressType: ModelStringInput
  isDefault: ModelBooleanInput
  isMain: ModelBooleanInput
  isMetric: ModelBooleanInput
  isWindows: ModelBooleanInput
  jumboFrameCapable: ModelBooleanInput
  lagId: ModelStringInput
  lastUpdated: ModelStringInput
  launchConfigurationName: ModelStringInput
  launchTemplate: ModelStringInput
  launchTime: ModelStringInput
  lbState: ModelStringInput
  loaIssueTime: ModelStringInput
  loadBalancerArn: ModelStringInput
  loadBalancerName: ModelStringInput
  loadBalancerNameTag: ModelStringInput
  loadBalancerNames: ModelStringInput
  location: ModelStringInput
  macSecCapable: ModelBooleanInput
  mapPublicIpOnLaunch: ModelBooleanInput
  maxSize: ModelIntInput
  metricData: ModelStringInput
  metricDate: ModelStringInput
  metricType: ModelStringInput
  minSize: ModelIntInput
  mtu: ModelIntInput
  multiAz: ModelBooleanInput
  multicastSupport: ModelStringInput
  naclEgressRuleCount: ModelIntInput
  naclIngressRuleCount: ModelIntInput
  natGatewayId: ModelStringInput
  natGatewayName: ModelStringInput
  natGatewayState: ModelStringInput
  natPublicIps: ModelStringInput
  networkAclId: ModelStringInput
  networkAclName: ModelStringInput
  networkBorderGroup: ModelStringInput
  networkInterfaceId: ModelStringInput
  networkInterfaceOwnerId: ModelStringInput
  not: ModelAWSResourceConditionInput
  objectCount: ModelIntInput
  or: [ModelAWSResourceConditionInput]
  ownerId: ModelStringInput
  partnerName: ModelStringInput
  patchGroup: ModelStringInput
  peeringConnectionName: ModelStringInput
  peeringStatus: ModelStringInput
  performanceInsightsEnabled: ModelBooleanInput
  platform: ModelStringInput
  platformDetails: ModelStringInput
  policyDocument: ModelStringInput
  portEncryptionStatus: ModelStringInput
  privateDnsEnabled: ModelBooleanInput
  privateIpAddress: ModelStringInput
  publicIp: ModelStringInput
  ramUtilization: ModelStringInput
  region: ModelStringInput
  requesterOwnerId: ModelStringInput
  requesterRegion: ModelStringInput
  requesterVpcId: ModelStringInput
  resourceOwnerId: ModelStringInput
  resourceType: ModelStringInput
  resourceTypeRegionId: ModelStringInput
  resourcesProcessed: ModelIntInput
  riskyIngressRules: ModelStringInput
  routeCount: ModelIntInput
  routeFilterPrefixes: ModelStringInput
  routeTableId: ModelStringInput
  routeTableIds: ModelStringInput
  routeTableName: ModelStringInput
  saturday: ModelStringInput
  scheme: ModelStringInput
  securityGroupIds: ModelStringInput
  securityGroups: ModelStringInput
  serviceLinkedRoleArn: ModelStringInput
  serviceName: ModelStringInput
  size: ModelFloatInput
  snapshotArn: ModelStringInput
  snapshotCreateTime: ModelStringInput
  snapshotId: ModelStringInput
  snapshotName: ModelStringInput
  snapshotState: ModelStringInput
  snapshotType: ModelStringInput
  ssmLastPingTime: ModelStringInput
  ssmPingStatus: ModelStringInput
  ssmStatus: ModelStringInput
  ssmVersion: ModelStringInput
  startStop: ModelStringInput
  startTime: ModelStringInput
  state: ModelStringInput
  status: ModelStringInput
  statusMessage: ModelStringInput
  storageBytes: ModelStringInput
  storageClass: ModelStringInput
  storageType: ModelStringInput
  subnetId: ModelStringInput
  subnetIds: ModelStringInput
  subnetName: ModelStringInput
  subnetState: ModelStringInput
  subnets: ModelStringInput
  sunday: ModelStringInput
  swoBackup: ModelStringInput
  swoMonitor: ModelStringInput
  swoPatch: ModelStringInput
  swoRiskClass: ModelStringInput
  systemStatus: ModelStringInput
  tags: ModelStringInput
  targetGroupArns: ModelStringInput
  targetGroups: ModelStringInput
  tgwState: ModelStringInput
  transitGatewayAttachmentId: ModelStringInput
  transitGatewayId: ModelStringInput
  transitGatewayName: ModelStringInput
  transitGatewayOwnerId: ModelStringInput
  tunnelCount: ModelIntInput
  tunnelsUp: ModelIntInput
  type: ModelStringInput
  updatedAt: ModelStringInput
  virtualGatewayId: ModelStringInput
  virtualInterfaceId: ModelStringInput
  virtualInterfaceName: ModelStringInput
  virtualInterfaceState: ModelStringInput
  virtualInterfaceType: ModelStringInput
  vlan: ModelIntInput
  volumeId: ModelStringInput
  volumeName: ModelStringInput
  volumeSize: ModelFloatInput
  volumeState: ModelStringInput
  volumeType: ModelStringInput
  vpcEndpointId: ModelStringInput
  vpcEndpointName: ModelStringInput
  vpcEndpointType: ModelStringInput
  vpcId: ModelStringInput
  vpcName: ModelStringInput
  vpcPeeringConnectionId: ModelStringInput
  vpcState: ModelStringInput
  vpcZoneIdentifier: ModelStringInput
  vpnConnectionId: ModelStringInput
  vpnConnectionName: ModelStringInput
  vpnEcmpSupport: ModelStringInput
  vpnGatewayId: ModelStringInput
  vpnState: ModelStringInput
}

input ModelAWSResourceFilterInput {
  accepterOwnerId: ModelStringInput
  accepterRegion: ModelStringInput
  accepterVpcId: ModelStringInput
  accountId: ModelStringInput
  accountName: ModelStringInput
  allIngressPortsExposed: ModelBooleanInput
  allocatedStorage: ModelFloatInput
  allocationId: ModelStringInput
  amazonAddress: ModelStringInput
  amazonSideAsn: ModelIntInput
  amiName: ModelStringInput
  and: [ModelAWSResourceFilterInput]
  asn: ModelIntInput
  assignIpv6AddressOnCreation: ModelBooleanInput
  associatedSubnets: ModelStringInput
  association: ModelStringInput
  associationCount: ModelIntInput
  associationId: ModelStringInput
  attachedInstances: ModelStringInput
  attachedResourceId: ModelStringInput
  attachedResourceType: ModelStringInput
  attachedVpcs: ModelStringInput
  attachmentCount: ModelIntInput
  attachmentName: ModelStringInput
  attachmentResourceId: ModelStringInput
  attachmentResourceType: ModelStringInput
  attachmentState: ModelStringInput
  authKey: ModelStringInput
  autoScalingGroupArn: ModelStringInput
  autoScalingGroupName: ModelStringInput
  autoScalingGroupNameTag: ModelStringInput
  autoShutdown: ModelStringInput
  autoStart: ModelStringInput
  availabilityZone: ModelStringInput
  availabilityZoneId: ModelStringInput
  availabilityZones: ModelStringInput
  availableIpAddressCount: ModelIntInput
  awsDevice: ModelStringInput
  awsDeviceV2: ModelStringInput
  bandwidth: ModelStringInput
  bgpPeers: ModelStringInput
  bucketName: ModelStringInput
  bucketNameTag: ModelStringInput
  canonicalHostedZoneId: ModelStringInput
  canonicalHostedZoneName: ModelStringInput
  canonicalHostedZoneNameId: ModelStringInput
  carrierIp: ModelStringInput
  category: ModelStringInput
  cidrBlock: ModelStringInput
  clusterId: ModelStringInput
  collectionDuration: ModelFloatInput
  connectionId: ModelStringInput
  connectionName: ModelStringInput
  connectionState: ModelStringInput
  connectivityType: ModelStringInput
  createdAt: ModelStringInput
  creationDate: ModelStringInput
  currentSize: ModelIntInput
  customDenyRuleCount: ModelIntInput
  customerAddress: ModelStringInput
  customerGatewayId: ModelStringInput
  customerOwnedIp: ModelStringInput
  customerOwnedIpv4Pool: ModelStringInput
  customerRouterConfig: ModelStringInput
  cwAgentDiskDetected: ModelBooleanInput
  cwAgentMemoryDetected: ModelBooleanInput
  dbInstanceArn: ModelStringInput
  dbInstanceId: ModelStringInput
  dbInstanceName: ModelStringInput
  defaultForAz: ModelBooleanInput
  defaultRouteTableAssociation: ModelStringInput
  defaultRouteTablePropagation: ModelStringInput
  description: ModelStringInput
  desiredCapacity: ModelIntInput
  directConnectGatewayId: ModelStringInput
  diskUtilization: ModelStringInput
  dnsName: ModelStringInput
  dnsSupport: ModelStringInput
  domain: ModelStringInput
  ebsStatus: ModelStringInput
  egressRuleCount: ModelIntInput
  eipName: ModelStringInput
  enableDnsHostnames: ModelBooleanInput
  enableDnsSupport: ModelBooleanInput
  encrypted: ModelBooleanInput
  encryptionMode: ModelStringInput
  endpointState: ModelStringInput
  engine: ModelStringInput
  engineVersion: ModelStringInput
  exposedEgressPorts: ModelStringInput
  exposedIngressPorts: ModelStringInput
  flowLogsEnabled: ModelBooleanInput
  groupId: ModelStringInput
  groupName: ModelStringInput
  groupNameTag: ModelStringInput
  hasExposedEgressPorts: ModelBooleanInput
  hasExposedIngressPorts: ModelBooleanInput
  hasInternetRoute: ModelBooleanInput
  hasLifecycleRules: ModelBooleanInput
  hasLogicalRedundancy: ModelStringInput
  hasNatRoute: ModelBooleanInput
  hasVpcPeeringRoute: ModelBooleanInput
  healthCheck: ModelStringInput
  healthCheckGracePeriod: ModelIntInput
  healthCheckType: ModelStringInput
  healthChecksPassed: ModelIntInput
  healthChecksTotal: ModelIntInput
  healthStatus: ModelStringInput
  healthyInstances: ModelIntInput
  iamRole: ModelStringInput
  id: ModelStringInput
  imageId: ModelStringInput
  imageName: ModelStringInput
  imageState: ModelStringInput
  ingressRuleCount: ModelIntInput
  instanceClass: ModelStringInput
  instanceCount: ModelIntInput
  instanceId: ModelStringInput
  instanceIds: ModelStringInput
  instanceName: ModelStringInput
  instancePrivateIps: ModelStringInput
  instancePublicIps: ModelStringInput
  instanceState: ModelStringInput
  instanceStatus: ModelStringInput
  instanceTenancy: ModelStringInput
  instanceType: ModelStringInput
  instances: ModelStringInput
  internetGatewayId: ModelStringInput
  internetGatewayName: ModelStringInput
  ipAddressType: ModelStringInput
  isDefault: ModelBooleanInput
  isMain: ModelBooleanInput
  isMetric: ModelBooleanInput
  isWindows: ModelBooleanInput
  jumboFrameCapable: ModelBooleanInput
  lagId: ModelStringInput
  lastUpdated: ModelStringInput
  launchConfigurationName: ModelStringInput
  launchTemplate: ModelStringInput
  launchTime: ModelStringInput
  lbState: ModelStringInput
  loaIssueTime: ModelStringInput
  loadBalancerArn: ModelStringInput
  loadBalancerName: ModelStringInput
  loadBalancerNameTag: ModelStringInput
  loadBalancerNames: ModelStringInput
  location: ModelStringInput
  macSecCapable: ModelBooleanInput
  mapPublicIpOnLaunch: ModelBooleanInput
  maxSize: ModelIntInput
  metricData: ModelStringInput
  metricDate: ModelStringInput
  metricType: ModelStringInput
  minSize: ModelIntInput
  mtu: ModelIntInput
  multiAz: ModelBooleanInput
  multicastSupport: ModelStringInput
  naclEgressRuleCount: ModelIntInput
  naclIngressRuleCount: ModelIntInput
  natGatewayId: ModelStringInput
  natGatewayName: ModelStringInput
  natGatewayState: ModelStringInput
  natPublicIps: ModelStringInput
  networkAclId: ModelStringInput
  networkAclName: ModelStringInput
  networkBorderGroup: ModelStringInput
  networkInterfaceId: ModelStringInput
  networkInterfaceOwnerId: ModelStringInput
  not: ModelAWSResourceFilterInput
  objectCount: ModelIntInput
  or: [ModelAWSResourceFilterInput]
  ownerId: ModelStringInput
  partnerName: ModelStringInput
  patchGroup: ModelStringInput
  peeringConnectionName: ModelStringInput
  peeringStatus: ModelStringInput
  performanceInsightsEnabled: ModelBooleanInput
  platform: ModelStringInput
  platformDetails: ModelStringInput
  policyDocument: ModelStringInput
  portEncryptionStatus: ModelStringInput
  privateDnsEnabled: ModelBooleanInput
  privateIpAddress: ModelStringInput
  publicIp: ModelStringInput
  ramUtilization: ModelStringInput
  region: ModelStringInput
  requesterOwnerId: ModelStringInput
  requesterRegion: ModelStringInput
  requesterVpcId: ModelStringInput
  resourceOwnerId: ModelStringInput
  resourceType: ModelStringInput
  resourceTypeRegionId: ModelStringInput
  resourcesProcessed: ModelIntInput
  riskyIngressRules: ModelStringInput
  routeCount: ModelIntInput
  routeFilterPrefixes: ModelStringInput
  routeTableId: ModelStringInput
  routeTableIds: ModelStringInput
  routeTableName: ModelStringInput
  saturday: ModelStringInput
  scheme: ModelStringInput
  securityGroupIds: ModelStringInput
  securityGroups: ModelStringInput
  serviceLinkedRoleArn: ModelStringInput
  serviceName: ModelStringInput
  size: ModelFloatInput
  snapshotArn: ModelStringInput
  snapshotCreateTime: ModelStringInput
  snapshotId: ModelStringInput
  snapshotName: ModelStringInput
  snapshotState: ModelStringInput
  snapshotType: ModelStringInput
  ssmLastPingTime: ModelStringInput
  ssmPingStatus: ModelStringInput
  ssmStatus: ModelStringInput
  ssmVersion: ModelStringInput
  startStop: ModelStringInput
  startTime: ModelStringInput
  state: ModelStringInput
  status: ModelStringInput
  statusMessage: ModelStringInput
  storageBytes: ModelStringInput
  storageClass: ModelStringInput
  storageType: ModelStringInput
  subnetId: ModelStringInput
  subnetIds: ModelStringInput
  subnetName: ModelStringInput
  subnetState: ModelStringInput
  subnets: ModelStringInput
  sunday: ModelStringInput
  swoBackup: ModelStringInput
  swoMonitor: ModelStringInput
  swoPatch: ModelStringInput
  swoRiskClass: ModelStringInput
  systemStatus: ModelStringInput
  tags: ModelStringInput
  targetGroupArns: ModelStringInput
  targetGroups: ModelStringInput
  tgwState: ModelStringInput
  transitGatewayAttachmentId: ModelStringInput
  transitGatewayId: ModelStringInput
  transitGatewayName: ModelStringInput
  transitGatewayOwnerId: ModelStringInput
  tunnelCount: ModelIntInput
  tunnelsUp: ModelIntInput
  type: ModelStringInput
  updatedAt: ModelStringInput
  virtualGatewayId: ModelStringInput
  virtualInterfaceId: ModelStringInput
  virtualInterfaceName: ModelStringInput
  virtualInterfaceState: ModelStringInput
  virtualInterfaceType: ModelStringInput
  vlan: ModelIntInput
  volumeId: ModelStringInput
  volumeName: ModelStringInput
  volumeSize: ModelFloatInput
  volumeState: ModelStringInput
  volumeType: ModelStringInput
  vpcEndpointId: ModelStringInput
  vpcEndpointName: ModelStringInput
  vpcEndpointType: ModelStringInput
  vpcId: ModelStringInput
  vpcName: ModelStringInput
  vpcPeeringConnectionId: ModelStringInput
  vpcState: ModelStringInput
  vpcZoneIdentifier: ModelStringInput
  vpnConnectionId: ModelStringInput
  vpnConnectionName: ModelStringInput
  vpnEcmpSupport: ModelStringInput
  vpnGatewayId: ModelStringInput
  vpnState: ModelStringInput
}

input ModelBooleanInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  eq: Boolean
  ne: Boolean
}

input ModelFloatInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input ModelIDInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input ModelIntInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelStringInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input ModelStringKeyConditionInput {
  beginsWith: String
  between: [String]
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
}

input ModelSubscriptionAWSResourceFilterInput {
  accepterOwnerId: ModelSubscriptionStringInput
  accepterRegion: ModelSubscriptionStringInput
  accepterVpcId: ModelSubscriptionStringInput
  accountId: ModelSubscriptionStringInput
  accountName: ModelSubscriptionStringInput
  allIngressPortsExposed: ModelSubscriptionBooleanInput
  allocatedStorage: ModelSubscriptionFloatInput
  allocationId: ModelSubscriptionStringInput
  amazonAddress: ModelSubscriptionStringInput
  amazonSideAsn: ModelSubscriptionIntInput
  amiName: ModelSubscriptionStringInput
  and: [ModelSubscriptionAWSResourceFilterInput]
  asn: ModelSubscriptionIntInput
  assignIpv6AddressOnCreation: ModelSubscriptionBooleanInput
  associatedSubnets: ModelSubscriptionStringInput
  association: ModelSubscriptionStringInput
  associationCount: ModelSubscriptionIntInput
  associationId: ModelSubscriptionStringInput
  attachedInstances: ModelSubscriptionStringInput
  attachedResourceId: ModelSubscriptionStringInput
  attachedResourceType: ModelSubscriptionStringInput
  attachedVpcs: ModelSubscriptionStringInput
  attachmentCount: ModelSubscriptionIntInput
  attachmentName: ModelSubscriptionStringInput
  attachmentResourceId: ModelSubscriptionStringInput
  attachmentResourceType: ModelSubscriptionStringInput
  attachmentState: ModelSubscriptionStringInput
  authKey: ModelSubscriptionStringInput
  autoScalingGroupArn: ModelSubscriptionStringInput
  autoScalingGroupName: ModelSubscriptionStringInput
  autoScalingGroupNameTag: ModelSubscriptionStringInput
  autoShutdown: ModelSubscriptionStringInput
  autoStart: ModelSubscriptionStringInput
  availabilityZone: ModelSubscriptionStringInput
  availabilityZoneId: ModelSubscriptionStringInput
  availabilityZones: ModelSubscriptionStringInput
  availableIpAddressCount: ModelSubscriptionIntInput
  awsDevice: ModelSubscriptionStringInput
  awsDeviceV2: ModelSubscriptionStringInput
  bandwidth: ModelSubscriptionStringInput
  bgpPeers: ModelSubscriptionStringInput
  bucketName: ModelSubscriptionStringInput
  bucketNameTag: ModelSubscriptionStringInput
  canonicalHostedZoneId: ModelSubscriptionStringInput
  canonicalHostedZoneName: ModelSubscriptionStringInput
  canonicalHostedZoneNameId: ModelSubscriptionStringInput
  carrierIp: ModelSubscriptionStringInput
  category: ModelSubscriptionStringInput
  cidrBlock: ModelSubscriptionStringInput
  clusterId: ModelSubscriptionStringInput
  collectionDuration: ModelSubscriptionFloatInput
  connectionId: ModelSubscriptionStringInput
  connectionName: ModelSubscriptionStringInput
  connectionState: ModelSubscriptionStringInput
  connectivityType: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  creationDate: ModelSubscriptionStringInput
  currentSize: ModelSubscriptionIntInput
  customDenyRuleCount: ModelSubscriptionIntInput
  customerAddress: ModelSubscriptionStringInput
  customerGatewayId: ModelSubscriptionStringInput
  customerOwnedIp: ModelSubscriptionStringInput
  customerOwnedIpv4Pool: ModelSubscriptionStringInput
  customerRouterConfig: ModelSubscriptionStringInput
  cwAgentDiskDetected: ModelSubscriptionBooleanInput
  cwAgentMemoryDetected: ModelSubscriptionBooleanInput
  dbInstanceArn: ModelSubscriptionStringInput
  dbInstanceId: ModelSubscriptionStringInput
  dbInstanceName: ModelSubscriptionStringInput
  defaultForAz: ModelSubscriptionBooleanInput
  defaultRouteTableAssociation: ModelSubscriptionStringInput
  defaultRouteTablePropagation: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  desiredCapacity: ModelSubscriptionIntInput
  directConnectGatewayId: ModelSubscriptionStringInput
  diskUtilization: ModelSubscriptionStringInput
  dnsName: ModelSubscriptionStringInput
  dnsSupport: ModelSubscriptionStringInput
  domain: ModelSubscriptionStringInput
  ebsStatus: ModelSubscriptionStringInput
  egressRuleCount: ModelSubscriptionIntInput
  eipName: ModelSubscriptionStringInput
  enableDnsHostnames: ModelSubscriptionBooleanInput
  enableDnsSupport: ModelSubscriptionBooleanInput
  encrypted: ModelSubscriptionBooleanInput
  encryptionMode: ModelSubscriptionStringInput
  endpointState: ModelSubscriptionStringInput
  engine: ModelSubscriptionStringInput
  engineVersion: ModelSubscriptionStringInput
  exposedEgressPorts: ModelSubscriptionStringInput
  exposedIngressPorts: ModelSubscriptionStringInput
  flowLogsEnabled: ModelSubscriptionBooleanInput
  groupId: ModelSubscriptionStringInput
  groupName: ModelSubscriptionStringInput
  groupNameTag: ModelSubscriptionStringInput
  hasExposedEgressPorts: ModelSubscriptionBooleanInput
  hasExposedIngressPorts: ModelSubscriptionBooleanInput
  hasInternetRoute: ModelSubscriptionBooleanInput
  hasLifecycleRules: ModelSubscriptionBooleanInput
  hasLogicalRedundancy: ModelSubscriptionStringInput
  hasNatRoute: ModelSubscriptionBooleanInput
  hasVpcPeeringRoute: ModelSubscriptionBooleanInput
  healthCheck: ModelSubscriptionStringInput
  healthCheckGracePeriod: ModelSubscriptionIntInput
  healthCheckType: ModelSubscriptionStringInput
  healthChecksPassed: ModelSubscriptionIntInput
  healthChecksTotal: ModelSubscriptionIntInput
  healthStatus: ModelSubscriptionStringInput
  healthyInstances: ModelSubscriptionIntInput
  iamRole: ModelSubscriptionStringInput
  id: ModelSubscriptionStringInput
  imageId: ModelSubscriptionStringInput
  imageName: ModelSubscriptionStringInput
  imageState: ModelSubscriptionStringInput
  ingressRuleCount: ModelSubscriptionIntInput
  instanceClass: ModelSubscriptionStringInput
  instanceCount: ModelSubscriptionIntInput
  instanceId: ModelSubscriptionStringInput
  instanceIds: ModelSubscriptionStringInput
  instanceName: ModelSubscriptionStringInput
  instancePrivateIps: ModelSubscriptionStringInput
  instancePublicIps: ModelSubscriptionStringInput
  instanceState: ModelSubscriptionStringInput
  instanceStatus: ModelSubscriptionStringInput
  instanceTenancy: ModelSubscriptionStringInput
  instanceType: ModelSubscriptionStringInput
  instances: ModelSubscriptionStringInput
  internetGatewayId: ModelSubscriptionStringInput
  internetGatewayName: ModelSubscriptionStringInput
  ipAddressType: ModelSubscriptionStringInput
  isDefault: ModelSubscriptionBooleanInput
  isMain: ModelSubscriptionBooleanInput
  isMetric: ModelSubscriptionBooleanInput
  isWindows: ModelSubscriptionBooleanInput
  jumboFrameCapable: ModelSubscriptionBooleanInput
  lagId: ModelSubscriptionStringInput
  lastUpdated: ModelSubscriptionStringInput
  launchConfigurationName: ModelSubscriptionStringInput
  launchTemplate: ModelSubscriptionStringInput
  launchTime: ModelSubscriptionStringInput
  lbState: ModelSubscriptionStringInput
  loaIssueTime: ModelSubscriptionStringInput
  loadBalancerArn: ModelSubscriptionStringInput
  loadBalancerName: ModelSubscriptionStringInput
  loadBalancerNameTag: ModelSubscriptionStringInput
  loadBalancerNames: ModelSubscriptionStringInput
  location: ModelSubscriptionStringInput
  macSecCapable: ModelSubscriptionBooleanInput
  mapPublicIpOnLaunch: ModelSubscriptionBooleanInput
  maxSize: ModelSubscriptionIntInput
  metricData: ModelSubscriptionStringInput
  metricDate: ModelSubscriptionStringInput
  metricType: ModelSubscriptionStringInput
  minSize: ModelSubscriptionIntInput
  mtu: ModelSubscriptionIntInput
  multiAz: ModelSubscriptionBooleanInput
  multicastSupport: ModelSubscriptionStringInput
  naclEgressRuleCount: ModelSubscriptionIntInput
  naclIngressRuleCount: ModelSubscriptionIntInput
  natGatewayId: ModelSubscriptionStringInput
  natGatewayName: ModelSubscriptionStringInput
  natGatewayState: ModelSubscriptionStringInput
  natPublicIps: ModelSubscriptionStringInput
  networkAclId: ModelSubscriptionStringInput
  networkAclName: ModelSubscriptionStringInput
  networkBorderGroup: ModelSubscriptionStringInput
  networkInterfaceId: ModelSubscriptionStringInput
  networkInterfaceOwnerId: ModelSubscriptionStringInput
  objectCount: ModelSubscriptionIntInput
  or: [ModelSubscriptionAWSResourceFilterInput]
  ownerId: ModelSubscriptionStringInput
  partnerName: ModelSubscriptionStringInput
  patchGroup: ModelSubscriptionStringInput
  peeringConnectionName: ModelSubscriptionStringInput
  peeringStatus: ModelSubscriptionStringInput
  performanceInsightsEnabled: ModelSubscriptionBooleanInput
  platform: ModelSubscriptionStringInput
  platformDetails: ModelSubscriptionStringInput
  policyDocument: ModelSubscriptionStringInput
  portEncryptionStatus: ModelSubscriptionStringInput
  privateDnsEnabled: ModelSubscriptionBooleanInput
  privateIpAddress: ModelSubscriptionStringInput
  publicIp: ModelSubscriptionStringInput
  ramUtilization: ModelSubscriptionStringInput
  region: ModelSubscriptionStringInput
  requesterOwnerId: ModelSubscriptionStringInput
  requesterRegion: ModelSubscriptionStringInput
  requesterVpcId: ModelSubscriptionStringInput
  resourceOwnerId: ModelSubscriptionStringInput
  resourceType: ModelSubscriptionStringInput
  resourceTypeRegionId: ModelSubscriptionStringInput
  resourcesProcessed: ModelSubscriptionIntInput
  riskyIngressRules: ModelSubscriptionStringInput
  routeCount: ModelSubscriptionIntInput
  routeFilterPrefixes: ModelSubscriptionStringInput
  routeTableId: ModelSubscriptionStringInput
  routeTableIds: ModelSubscriptionStringInput
  routeTableName: ModelSubscriptionStringInput
  saturday: ModelSubscriptionStringInput
  scheme: ModelSubscriptionStringInput
  securityGroupIds: ModelSubscriptionStringInput
  securityGroups: ModelSubscriptionStringInput
  serviceLinkedRoleArn: ModelSubscriptionStringInput
  serviceName: ModelSubscriptionStringInput
  size: ModelSubscriptionFloatInput
  snapshotArn: ModelSubscriptionStringInput
  snapshotCreateTime: ModelSubscriptionStringInput
  snapshotId: ModelSubscriptionStringInput
  snapshotName: ModelSubscriptionStringInput
  snapshotState: ModelSubscriptionStringInput
  snapshotType: ModelSubscriptionStringInput
  ssmLastPingTime: ModelSubscriptionStringInput
  ssmPingStatus: ModelSubscriptionStringInput
  ssmStatus: ModelSubscriptionStringInput
  ssmVersion: ModelSubscriptionStringInput
  startStop: ModelSubscriptionStringInput
  startTime: ModelSubscriptionStringInput
  state: ModelSubscriptionStringInput
  status: ModelSubscriptionStringInput
  statusMessage: ModelSubscriptionStringInput
  storageBytes: ModelSubscriptionStringInput
  storageClass: ModelSubscriptionStringInput
  storageType: ModelSubscriptionStringInput
  subnetId: ModelSubscriptionStringInput
  subnetIds: ModelSubscriptionStringInput
  subnetName: ModelSubscriptionStringInput
  subnetState: ModelSubscriptionStringInput
  subnets: ModelSubscriptionStringInput
  sunday: ModelSubscriptionStringInput
  swoBackup: ModelSubscriptionStringInput
  swoMonitor: ModelSubscriptionStringInput
  swoPatch: ModelSubscriptionStringInput
  swoRiskClass: ModelSubscriptionStringInput
  systemStatus: ModelSubscriptionStringInput
  tags: ModelSubscriptionStringInput
  targetGroupArns: ModelSubscriptionStringInput
  targetGroups: ModelSubscriptionStringInput
  tgwState: ModelSubscriptionStringInput
  transitGatewayAttachmentId: ModelSubscriptionStringInput
  transitGatewayId: ModelSubscriptionStringInput
  transitGatewayName: ModelSubscriptionStringInput
  transitGatewayOwnerId: ModelSubscriptionStringInput
  tunnelCount: ModelSubscriptionIntInput
  tunnelsUp: ModelSubscriptionIntInput
  type: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  virtualGatewayId: ModelSubscriptionStringInput
  virtualInterfaceId: ModelSubscriptionStringInput
  virtualInterfaceName: ModelSubscriptionStringInput
  virtualInterfaceState: ModelSubscriptionStringInput
  virtualInterfaceType: ModelSubscriptionStringInput
  vlan: ModelSubscriptionIntInput
  volumeId: ModelSubscriptionStringInput
  volumeName: ModelSubscriptionStringInput
  volumeSize: ModelSubscriptionFloatInput
  volumeState: ModelSubscriptionStringInput
  volumeType: ModelSubscriptionStringInput
  vpcEndpointId: ModelSubscriptionStringInput
  vpcEndpointName: ModelSubscriptionStringInput
  vpcEndpointType: ModelSubscriptionStringInput
  vpcId: ModelSubscriptionStringInput
  vpcName: ModelSubscriptionStringInput
  vpcPeeringConnectionId: ModelSubscriptionStringInput
  vpcState: ModelSubscriptionStringInput
  vpcZoneIdentifier: ModelSubscriptionStringInput
  vpnConnectionId: ModelSubscriptionStringInput
  vpnConnectionName: ModelSubscriptionStringInput
  vpnEcmpSupport: ModelSubscriptionStringInput
  vpnGatewayId: ModelSubscriptionStringInput
  vpnState: ModelSubscriptionStringInput
}

input ModelSubscriptionBooleanInput {
  eq: Boolean
  ne: Boolean
}

input ModelSubscriptionFloatInput {
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  in: [Float]
  le: Float
  lt: Float
  ne: Float
  notIn: [Float]
}

input ModelSubscriptionIDInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  in: [ID]
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  notIn: [ID]
}

input ModelSubscriptionIntInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  in: [Int]
  le: Int
  lt: Int
  ne: Int
  notIn: [Int]
}

input ModelSubscriptionStringInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  ne: String
  notContains: String
  notIn: [String]
}

input UpdateAWSResourceInput {
  accepterOwnerId: String
  accepterRegion: String
  accepterVpcId: String
  accountId: String
  accountName: String
  allIngressPortsExposed: Boolean
  allocatedStorage: Float
  allocationId: String
  amazonAddress: String
  amazonSideAsn: Int
  amiName: String
  asn: Int
  assignIpv6AddressOnCreation: Boolean
  associatedSubnets: [String]
  association: AWSJSON
  associationCount: Int
  associationId: String
  attachedInstances: [String]
  attachedResourceId: String
  attachedResourceType: String
  attachedVpcs: [String]
  attachmentCount: Int
  attachmentName: String
  attachmentResourceId: String
  attachmentResourceType: String
  attachmentState: String
  authKey: String
  autoScalingGroupArn: String
  autoScalingGroupName: String
  autoScalingGroupNameTag: String
  autoShutdown: String
  autoStart: String
  availabilityZone: String
  availabilityZoneId: String
  availabilityZones: [String]
  availableIpAddressCount: Int
  awsDevice: String
  awsDeviceV2: String
  bandwidth: String
  bgpPeers: AWSJSON
  bucketName: String
  bucketNameTag: String
  canonicalHostedZoneId: String
  canonicalHostedZoneName: String
  canonicalHostedZoneNameId: String
  carrierIp: String
  category: String
  cidrBlock: String
  clusterId: String
  collectionDuration: Float
  connectionId: String
  connectionName: String
  connectionState: String
  connectivityType: String
  createdAt: AWSDateTime
  creationDate: AWSDateTime
  currentSize: Int
  customDenyRuleCount: Int
  customerAddress: String
  customerGatewayId: String
  customerOwnedIp: String
  customerOwnedIpv4Pool: String
  customerRouterConfig: String
  cwAgentDiskDetected: Boolean
  cwAgentMemoryDetected: Boolean
  dbInstanceArn: String
  dbInstanceId: String
  dbInstanceName: String
  defaultForAz: Boolean
  defaultRouteTableAssociation: String
  defaultRouteTablePropagation: String
  description: String
  desiredCapacity: Int
  directConnectGatewayId: String
  diskUtilization: String
  dnsName: String
  dnsSupport: String
  domain: String
  ebsStatus: String
  egressRuleCount: Int
  eipName: String
  enableDnsHostnames: Boolean
  enableDnsSupport: Boolean
  encrypted: Boolean
  encryptionMode: String
  endpointState: String
  engine: String
  engineVersion: String
  exposedEgressPorts: [String]
  exposedIngressPorts: [String]
  flowLogsEnabled: Boolean
  groupId: String
  groupName: String
  groupNameTag: String
  hasExposedEgressPorts: Boolean
  hasExposedIngressPorts: Boolean
  hasInternetRoute: Boolean
  hasLifecycleRules: Boolean
  hasLogicalRedundancy: String
  hasNatRoute: Boolean
  hasVpcPeeringRoute: Boolean
  healthCheck: AWSJSON
  healthCheckGracePeriod: Int
  healthCheckType: String
  healthChecksPassed: Int
  healthChecksTotal: Int
  healthStatus: String
  healthyInstances: Int
  iamRole: String
  id: String!
  imageId: String
  imageName: String
  imageState: String
  ingressRuleCount: Int
  instanceClass: String
  instanceCount: Int
  instanceId: String
  instanceIds: [String]
  instanceName: String
  instancePrivateIps: AWSJSON
  instancePublicIps: AWSJSON
  instanceState: String
  instanceStatus: String
  instanceTenancy: String
  instanceType: String
  instances: [String]
  internetGatewayId: String
  internetGatewayName: String
  ipAddressType: String
  isDefault: Boolean
  isMain: Boolean
  isMetric: Boolean
  isWindows: Boolean
  jumboFrameCapable: Boolean
  lagId: String
  lastUpdated: AWSDateTime
  launchConfigurationName: String
  launchTemplate: AWSJSON
  launchTime: AWSDateTime
  lbState: String
  loaIssueTime: AWSDateTime
  loadBalancerArn: String
  loadBalancerName: String
  loadBalancerNameTag: String
  loadBalancerNames: [String]
  location: String
  macSecCapable: Boolean
  mapPublicIpOnLaunch: Boolean
  maxSize: Int
  metricData: AWSJSON
  metricDate: String
  metricType: String
  minSize: Int
  mtu: Int
  multiAz: Boolean
  multicastSupport: String
  naclEgressRuleCount: Int
  naclIngressRuleCount: Int
  natGatewayId: String
  natGatewayName: String
  natGatewayState: String
  natPublicIps: [String]
  networkAclId: String
  networkAclName: String
  networkBorderGroup: String
  networkInterfaceId: String
  networkInterfaceOwnerId: String
  objectCount: Int
  ownerId: String
  partnerName: String
  patchGroup: String
  peeringConnectionName: String
  peeringStatus: String
  performanceInsightsEnabled: Boolean
  platform: String
  platformDetails: String
  policyDocument: String
  portEncryptionStatus: String
  privateDnsEnabled: Boolean
  privateIpAddress: String
  publicIp: String
  ramUtilization: String
  region: String
  requesterOwnerId: String
  requesterRegion: String
  requesterVpcId: String
  resourceOwnerId: String
  resourceType: String
  resourceTypeRegionId: String
  resourcesProcessed: Int
  riskyIngressRules: [String]
  routeCount: Int
  routeFilterPrefixes: [String]
  routeTableId: String
  routeTableIds: [String]
  routeTableName: String
  saturday: String
  scheme: String
  securityGroupIds: [String]
  securityGroups: [String]
  serviceLinkedRoleArn: String
  serviceName: String
  size: Float
  snapshotArn: String
  snapshotCreateTime: String
  snapshotId: String
  snapshotName: String
  snapshotState: String
  snapshotType: String
  ssmLastPingTime: AWSDateTime
  ssmPingStatus: String
  ssmStatus: String
  ssmVersion: String
  startStop: String
  startTime: String
  state: String
  status: String
  statusMessage: String
  storageBytes: String
  storageClass: String
  storageType: String
  subnetId: String
  subnetIds: [String]
  subnetName: String
  subnetState: String
  subnets: [String]
  sunday: String
  swoBackup: String
  swoMonitor: String
  swoPatch: String
  swoRiskClass: String
  systemStatus: String
  tags: AWSJSON
  targetGroupArns: [String]
  targetGroups: [String]
  tgwState: String
  transitGatewayAttachmentId: String
  transitGatewayId: String
  transitGatewayName: String
  transitGatewayOwnerId: String
  tunnelCount: Int
  tunnelsUp: Int
  type: String
  updatedAt: AWSDateTime
  virtualGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceName: String
  virtualInterfaceState: String
  virtualInterfaceType: String
  vlan: Int
  volumeId: String
  volumeName: String
  volumeSize: Float
  volumeState: String
  volumeType: String
  vpcEndpointId: String
  vpcEndpointName: String
  vpcEndpointType: String
  vpcId: String
  vpcName: String
  vpcPeeringConnectionId: String
  vpcState: String
  vpcZoneIdentifier: String
  vpnConnectionId: String
  vpnConnectionName: String
  vpnEcmpSupport: String
  vpnGatewayId: String
  vpnState: String
}
